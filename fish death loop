def other_fish():
    global o_fish_length, o_fish_width, player_fish_width, player_fish_length
    global points, update_points, score, speed, death
    noStroke()
    for fish_num in range(10):
        noStroke()
        fill(o_fish_colour[fish_num])
        if (speed[fish_num] < 0 and o_fish_xco[fish_num] < -100) or \
           (speed[fish_num] > 0 and o_fish_xco[fish_num] > 740):
            o_fish_yco[fish_num] = (int(random(50, 430)))
            o_fish_xco[fish_num] = (int(random(2)))
            o_fish_colour[fish_num] = \
                (color(random(255), random(255), random(255)))
            if o_fish_xco[fish_num] == 0:
                o_fish_xco[fish_num] = int(random(-400, -40))
                speed[fish_num] = (random(1, 2))
            else:
                o_fish_xco[fish_num] = int(random(940, 680))
                speed[fish_num] = (-(random(1, 2)))

        if speed[fish_num] < 0:  # fish travels right
            ellipse(o_fish_xco[fish_num], o_fish_yco[fish_num],
                    o_fish_length[fish_num], o_fish_width[fish_num])
            triangle(o_fish_xco[fish_num] + o_fish_length[fish_num]/3,
                     o_fish_yco[fish_num],
                     o_fish_xco[fish_num] + o_fish_length[fish_num]/2 +
                     o_fish_length[fish_num]/4,
                     o_fish_yco[fish_num] - o_fish_width[fish_num]/3,
                     o_fish_xco[fish_num] + o_fish_length[fish_num]/2 +
                     o_fish_length[fish_num]/4,
                     o_fish_yco[fish_num] + o_fish_width[fish_num]/3)
            quad(o_fish_xco[fish_num],
                 o_fish_yco[fish_num] - o_fish_width[fish_num]/5,
                 o_fish_xco[fish_num] + o_fish_length[fish_num]/4.5,
                 o_fish_yco[fish_num] - o_fish_width[fish_num]/2 -
                 o_fish_width[fish_num]/4.5,
                 o_fish_xco[fish_num] + o_fish_length[fish_num]/2,
                 o_fish_yco[fish_num] - o_fish_width[fish_num]/2 -
                 o_fish_width[fish_num]/5.5,
                 o_fish_xco[fish_num] + o_fish_length[fish_num]/6,
                 o_fish_yco[fish_num] - o_fish_width[fish_num]/4)
            quad(o_fish_xco[fish_num],
                 o_fish_yco[fish_num] + o_fish_width[fish_num]/5,
                 o_fish_xco[fish_num] + o_fish_length[fish_num]/4.5,
                 o_fish_yco[fish_num] + o_fish_width[fish_num]/2 +
                 o_fish_width[fish_num]/4.5,
                 o_fish_xco[fish_num] + o_fish_length[fish_num]/2,
                 o_fish_yco[fish_num] + o_fish_width[fish_num]/2 +
                 o_fish_width[fish_num]/5.5,
                 o_fish_xco[fish_num] + o_fish_length[fish_num]/6,
                 o_fish_yco[fish_num] + o_fish_width[fish_num]/4)
            stroke(0)
            ellipse(o_fish_xco[fish_num] - o_fish_length[fish_num]/4,
                    o_fish_yco[fish_num] - o_fish_width[fish_num]/8,
                    o_fish_width[fish_num]/3.5, o_fish_width[fish_num]/3.5)
            fill(0)
            ellipse(o_fish_xco[fish_num] - o_fish_length[fish_num]/4,
                    o_fish_yco[fish_num] - o_fish_width[fish_num]/8,
                    o_fish_width[fish_num]/7, o_fish_width[fish_num]/7)
        else:  # fish travels left
            ellipse(o_fish_xco[fish_num], o_fish_yco[fish_num],
                    o_fish_length[fish_num], o_fish_width[fish_num])
            triangle(o_fish_xco[fish_num] - o_fish_length[fish_num]/3,
                     o_fish_yco[fish_num],
                     o_fish_xco[fish_num] - o_fish_length[fish_num]/2 -
                     o_fish_length[fish_num]/4,
                     o_fish_yco[fish_num] + o_fish_width[fish_num]/3,
                     o_fish_xco[fish_num] - o_fish_length[fish_num]/2 -
                     o_fish_length[fish_num]/4,
                     o_fish_yco[fish_num] - o_fish_width[fish_num]/3)
            quad(o_fish_xco[fish_num],
                 o_fish_yco[fish_num] + o_fish_width[fish_num]/5,
                 o_fish_xco[fish_num] - o_fish_length[fish_num]/4.5,
                 o_fish_yco[fish_num] + o_fish_width[fish_num]/2 +
                 o_fish_width[fish_num]/4.5,
                 o_fish_xco[fish_num] - o_fish_length[fish_num]/2,
                 o_fish_yco[fish_num] + o_fish_width[fish_num]/2 +
                 o_fish_width[fish_num]/5.5,
                 o_fish_xco[fish_num] - o_fish_length[fish_num]/6,
                 o_fish_yco[fish_num] + o_fish_width[fish_num]/4)
            quad(o_fish_xco[fish_num],
                 o_fish_yco[fish_num] - o_fish_width[fish_num]/5,
                 o_fish_xco[fish_num] - o_fish_length[fish_num]/4.5,
                 o_fish_yco[fish_num] - o_fish_width[fish_num]/2 -
                 o_fish_width[fish_num]/4.5,
                 o_fish_xco[fish_num] - o_fish_length[fish_num]/2,
                 o_fish_yco[fish_num] - o_fish_width[fish_num]/2 -
                 o_fish_width[fish_num]/5.5,
                 o_fish_xco[fish_num] - o_fish_length[fish_num]/6,
                 o_fish_yco[fish_num] - o_fish_width[fish_num]/4)
            stroke(0)
            ellipse(o_fish_xco[fish_num] + o_fish_length[fish_num]/4,
                    o_fish_yco[fish_num] - o_fish_width[fish_num]/8,
                    o_fish_width[fish_num]/3.5, o_fish_width[fish_num]/3.5)
            fill(0)
            ellipse(o_fish_xco[fish_num] + o_fish_length[fish_num]/4,
                    o_fish_yco[fish_num] - o_fish_width[fish_num]/8,
                    o_fish_width[fish_num]/7, o_fish_width[fish_num]/7)

        o_fish_xco[fish_num] += speed[fish_num]

        # Increase score
        if player_fish_width > o_fish_width[fish_num] + 5:
            if speed[fish_num] > 0:
                if player_fish_x - player_fish_length/2 in range \
                    (int(o_fish_xco[fish_num] - o_fish_length[fish_num]/3),
                     int(o_fish_xco[fish_num] + o_fish_length[fish_num]/3)) \
                    and o_fish_yco[fish_num] in range \
                    (int(player_fish_y - player_fish_width/2),
                     int(player_fish_y + player_fish_width/2)):
                        points += 1
                        o_fish_xco[fish_num] = 800
                elif player_fish_x + player_fish_length/2 in range \
                    (int(o_fish_xco[fish_num] - o_fish_length[fish_num]/2 -
                     o_fish_length[fish_num]/4),
                     int(o_fish_xco[fish_num] + o_fish_length[fish_num]/3)) \
                    and o_fish_yco[fish_num] in range \
                    (int(player_fish_y - player_fish_width/2),
                     int(player_fish_y + player_fish_width/2)):
                        points += 1
                        o_fish_xco[fish_num] = 800
            elif speed[fish_num] < 0:
                if player_fish_x + player_fish_length/2 in range \
                    (int(o_fish_xco[fish_num] - o_fish_length[fish_num]/3),
                     int(o_fish_xco[fish_num] + o_fish_length[fish_num]/2)) \
                    and o_fish_yco[fish_num] in range \
                    (int(player_fish_y - player_fish_width/2),
                     int(player_fish_y + player_fish_width/2)):
                        points += 1
                        o_fish_xco[fish_num] = -200
                elif player_fish_x - player_fish_length/2 in range \
                    (int(o_fish_xco[fish_num] - o_fish_length[fish_num]/3),
                     int(o_fish_xco[fish_num] + o_fish_length[fish_num]/2 +
                     o_fish_length[fish_num]/4)) and o_fish_yco[fish_num] \
                    in range(int(player_fish_y - player_fish_width/2),
                     int(player_fish_y + player_fish_width/2)):
                        points += 1
                        o_fish_xco[fish_num] = -200

        # death
        if player_fish_width < o_fish_width[fish_num]:
            if speed[fish_num] > 0:
                if player_fish_x - player_fish_length/2 in range \
                   (int(o_fish_xco[fish_num]),
                    int(o_fish_xco[fish_num] + o_fish_length[fish_num]/3)) \
                    and player_fish_y in range \
                    (int(o_fish_yco[fish_num] - o_fish_width[fish_num]/2),
                     int(o_fish_yco[fish_num] +
                     o_fish_width[fish_num]/2)):
                        death = True
            elif speed[fish_num] < 0:
                if player_fish_x + player_fish_length/2 in range \
                    (int(o_fish_xco[fish_num] - o_fish_length[fish_num]/3),
                     int(o_fish_xco[fish_num])) and player_fish_y in range \
                    (int(o_fish_yco[fish_num] - o_fish_width[fish_num]/2),
                     int(o_fish_yco[fish_num] +
                     o_fish_width[fish_num]/2)):
                        death = True

        if points != update_points:
            score += int(o_fish_width[fish_num] + o_fish_length[fish_num])/10
            update_points = points
        show_score()
